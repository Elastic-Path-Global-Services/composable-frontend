name: Generate Examples

on: 
  workflow_dispatch:
    inputs:
      parameter:
        example-to-deploy: Matches examples folder
  push:
    branches:
      - 'main'
      - 'release/gs-0.0.1'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-examples:
    permissions: write-all
    name: Create latest examples
    runs-on: ubuntu-latest
    outputs:
      commit_sha: ${{ steps.commit_changes.outputs.commit_long_sha }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: pnpm

      - name: Make .env.examples file (used in examples configuration.ts)
        run: |
          echo "${{ secrets.EXAMPLES_ENV_FILE }}" > .env.examples

      - name: Make .env file for composable-cli package
        run: |
          touch ./packages/composable-cli/.env
          echo POSTHOG_PUBLIC_API_KEY=${{ secrets.POSTHOG_PUBLIC_API_KEY }} >> ./packages/composable-cli/.env
          cat ./packages/composable-cli/.env

      - name: Install Dependencies
        run: pnpm install

      - name: Build schematic schema types
        run: pnpm generate

      - name: Build packages/*
        run: pnpm build:packages

      - name: Generate latest examples using script
        id: generate-examples
        run: (cd /home/runner/work/composable-frontend/examples && npx @angular-devkit/schematics-cli ../packages/d2c-schematics/dist:d2c \
              --name=global-services-klevu-storefront \
              --epcc-client-id=${{ secrets.EPCC_CLIENT_ID }} \
              --epcc-client-secret=${{ secrets.EPCC_CLIENT_SECRET }} \
              --epcc-endpoint-url=${{ secrets.EPCC_ENDPOINT_URL }} \
              --plp-type=Klevu \
              --klevu-api-key=${{ secrets.KLEVU_API_KEY }} \
              --klevu-search-u-r-l=${{ secrets.KLEVU_SEARCH_URL }} \
              --payment-gateway-type=Manual \
              --dry-run=false)
        continue-on-error: false

      - name: Install additional dependencies
        run: pnpm install

      - name: Run examples unit/integration tests
        id: examples-unit-int-tests
        run: pnpm test
        continue-on-error: false

      - name: Make .env.test file
        run: |
          echo "${{ secrets.TEST_ENV_FILE }}" > .env.test
          echo NEXT_PUBLIC_CI=true >> .env.test
          echo NEXT_PUBLIC_CI=true >> ./examples/simple/.env.test

      - name: Build everything
        run: pnpm build:e2e

      - name: Install playwright browsers
        run: npx playwright install --with-deps

      - name: Run e2e tests for latest examples
        run: pnpm test:e2e
        id: examples-e2e-tests
        continue-on-error: true
        env:
          BASE_URL: ${{ github.event.deployment_status.environment_url }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: examples/simple/test-results
        continue-on-error: true